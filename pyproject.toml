[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "avalon-bot"
version = "1.0.0"
description = "A Discord bot designed to facilitate and manage games of The Resistance: Avalon for 5-10 players. It offers complete game management, interactive UI with buttons and embeds, private role information via DMs, automated game flow, and includes all core Avalon roles."
readme = "README.md"
license = "MIT"
authors = [
    {name = "git-davi"}
]
keywords = ["discord", "bot", "game", "avalon", "resistance"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Games/Entertainment",
    "Topic :: Communications :: Chat",
]
requires-python = ">=3.8"
dependencies = [
    "discord.py>=2.3.0",
    "python-dotenv>=1.0.0",
]

[project.license-files]
patterns = ["LICENSE"]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-asyncio>=0.21.0",
    "black>=22.0",
    "flake8>=4.0",
    "mypy>=0.950",
]

[project.urls]
Homepage = "https://github.com/git-davi/avalon-bot"
Repository = "https://github.com/git-davi/avalon-bot"
Issues = "https://github.com/git-davi/avalon-bot/issues"
Documentation = "https://github.com/git-davi/avalon-bot/blob/main/README.md"

[project.scripts]
avalon-bot = "avalon.__main__:main"

[tool.setuptools.packages.find]
include = ["avalon*"]

[tool.setuptools.package-data]
avalon = ["*.txt", "*.md"]

[tool.black]
line-length = 100
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
    # directories
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
asyncio_mode = "auto"
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
